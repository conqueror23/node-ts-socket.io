version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: portfolio_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: portfolio_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./src/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./src/database/sample-data.sql:/docker-entrypoint-initdb.d/02-sample-data.sql
    networks:
      - portfolio_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d portfolio_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin - Web-based PostgreSQL administration
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: portfolio_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@portfolio.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./pgadmin_servers.json:/pgadmin4/servers.json
    networks:
      - portfolio_network
    depends_on:
      postgres:
        condition: service_healthy

  # Adminer - Lightweight database management tool (alternative)
  adminer:
    image: adminer:latest
    container_name: portfolio_adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    networks:
      - portfolio_network
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ADMINER_DEFAULT_SERVER: postgres

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  portfolio_network:
    driver: bridge